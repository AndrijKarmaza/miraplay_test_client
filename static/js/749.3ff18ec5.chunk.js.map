{"version":3,"file":"static/js/749.3ff18ec5.chunk.js","mappings":"qLACA,QAAuB,wBAAvB,EAAuD,yBAAvD,EAAwF,yBAAxF,EAAyH,yBAAzH,EAA0J,yBAA1J,EAAyL,uB,iDCQlL,MAAMA,EAAYA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC5BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAQxBC,GAASC,EAAAA,EAAAA,IAAO,CACpBC,OAAOC,EAAAA,EAAAA,MAASD,QAAQE,WACxBC,UAAUF,EAAAA,EAAAA,MAASG,IAAI,EAAG,gCAAgCF,aAG5D,OACEG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGX,GACCY,EAAAA,OAAOC,QACyB,qBAA9Bb,EAAUc,gBACN,4FAC8B,+BAA9Bd,EAAUc,gBACV,kHACA,8DAENjB,GAAiBkB,EAAAA,QAAQC,UAC3BC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEf,MAAO,GAAIG,SAAU,IACtCa,SAxBeC,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EACzC5B,GAAS8B,EAAAA,EAAAA,IAAUH,IACnBE,IACA3B,GAAiBkB,EAAAA,QAAQW,OAAO,UAAU,EAsBtCC,iBAAkBzB,EAAOS,UAEzBF,EAAAA,EAAAA,MAACmB,EAAAA,GAAI,CAACC,UAAWC,EAASnB,SAAA,EACxBM,EAAAA,EAAAA,KAAA,MAAIY,UAAWC,EAAUnB,SAAC,+BAC1BM,EAAAA,EAAAA,KAAA,KAAGY,UAAWC,EAAUnB,SAAC,yBACzBF,EAAAA,EAAAA,MAAA,SAAOoB,UAAWC,EAAUnB,SAAA,CAAC,oBAE3BM,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACC,UAAU,MAAMC,KAAK,WACnChB,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CACJL,UAAWC,EACXK,GAAG,QACHC,KAAK,OACLH,KAAK,QACLI,YAAY,+BAGhB5B,EAAAA,EAAAA,MAAA,SAAOoB,UAAWC,EAAUnB,SAAA,CAAC,kBAE3BM,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACC,UAAU,MAAMC,KAAK,cACnChB,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CACJL,UAAWC,EACXK,GAAG,QACHC,KAAK,OACLH,KAAK,WACLI,YAAY,sBAGhBpB,EAAAA,EAAAA,KAAA,UAAQY,UAAWC,EAASM,KAAK,SAAQzB,SAAC,kBAK7C,EClEP,EAJc2B,KACLrB,EAAAA,EAAAA,KAACvB,EAAS,G","sources":["webpack://miraplay_test_client/./src/components/LogInForm/LogInForm.module.css?b51d","components/LogInForm/LogInForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LogInForm_form__eVd1v\",\"title\":\"LogInForm_title__oFTru\",\"descr\":\"LogInForm_descr__Vp1UE\",\"label\":\"LogInForm_label__dkd48\",\"input\":\"LogInForm_input__lUMUu\",\"btn\":\"LogInForm_btn__x47pN\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { object, string } from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport css from './LogInForm.module.css';\r\nimport { logInUser } from 'redux/auth/authOperations';\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\nimport { getErrorUser, getIsLoadingUser } from 'redux/auth/authSelectors';\r\n\r\nexport const LogInForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isUserLoading = useSelector(getIsLoadingUser);\r\n  const userError = useSelector(getErrorUser);\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    dispatch(logInUser(values));\r\n    resetForm();\r\n    isUserLoading && Loading.circle('LOADING');\r\n  };\r\n\r\n  const schema = object({\r\n    email: string().email().required(),\r\n    password: string().min(6, ' Too Short! Minimum 6 symbol').required(),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {userError &&\r\n        Notify.failure(\r\n          userError.responseMessage === 'Email not verify'\r\n            ? 'Email not verified. To confirm, please follow the link in the email sent to your address.'\r\n            : userError.responseMessage === 'Email or password is wrong'\r\n            ? 'You have entered the wrong email or password. Please check the accuracy of the entered information or register.'\r\n            : 'Something went wrong please reload the page or try later.'\r\n        )}\r\n      {!isUserLoading && Loading.remove()}\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={schema}\r\n      >\r\n        <Form className={css.form}>\r\n          <h1 className={css.title}>Experience new sensations</h1>\r\n          <p className={css.descr}>Log in to see games</p>\r\n          <label className={css.label}>\r\n            Enter your email\r\n            <ErrorMessage component=\"div\" name=\"email\" />\r\n            <Field\r\n              className={css.input}\r\n              as=\"input\"\r\n              type=\"mail\"\r\n              name=\"email\"\r\n              placeholder=\"youremail@miraplay.com\"\r\n            ></Field>\r\n          </label>\r\n          <label className={css.label}>\r\n            Enter password\r\n            <ErrorMessage component=\"div\" name=\"password\" />\r\n            <Field\r\n              className={css.input}\r\n              as=\"input\"\r\n              type=\"text\"\r\n              name=\"password\"\r\n              placeholder=\"your password\"\r\n            ></Field>\r\n          </label>\r\n          <button className={css.btn} type=\"submit\">\r\n            Log in\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n","import { LogInForm } from 'components/LogInForm/LogInForm';\r\n\r\nconst Login = () => {\r\n  return <LogInForm />;\r\n};\r\n\r\nexport default Login;\r\n"],"names":["LogInForm","dispatch","useDispatch","isUserLoading","useSelector","getIsLoadingUser","userError","getErrorUser","schema","object","email","string","required","password","min","_jsxs","_Fragment","children","Notify","failure","responseMessage","Loading","remove","_jsx","Formik","initialValues","onSubmit","handleSubmit","values","_ref","resetForm","logInUser","circle","validationSchema","Form","className","css","ErrorMessage","component","name","Field","as","type","placeholder","Login"],"sourceRoot":""}